server:
  port: 8765
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true # Configura o Gateway para criar rotas automaticamente com base em serviços registrados com clientes de descoberta como o Eureka
      routes:
      - id: cambio-service # Apenas o identificador
        uri: lb://cambio-service # URI de destino
        predicates: #  Define as condições que devem ser atendidas para ativar esta rota. 
        - Path=/cambio-service/**
      - id: book-service
        uri: lb://book-service
        predicates:
        - Path=/book-service/**
      - id: openapi
        uri: lb://api-gateway
        predicates:
        - Path=/v3/api-docs/**
        filters:
        # O caminho da API como /v3/api-docs/{SERVICE_NAME} não é exatamente o que queremos alcançar, 
        # porque nosso roteamento para os serviços downstream é baseado no nome do serviço buscado na 
        # descoberta. Portanto, se você chamar um endereço como http://localhost:8060/book-servie/**, a 
        # carga será automaticamente balanceada entre todas as instâncias registradas do book-service. 
        - RewritePath=/v3/api-docs/(?<path>.*), /$\{path}/v3/api-docs # Rescreve o caminho /v3/api-docs/{SERVICE_NAME} como /{SERVICE_NAME}/v3/api-docs,
management:
  tracing:
    sampling:
      probability: 1.0 # Porcentagem de informações que serão feitas log (1.0 = 100%) Obs: Em produção deve ser 0.05